{"version":3,"sources":["components/Note.js","components/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","BASE_URL","axios","get","then","response","data","noteObject","post","res","changedNote","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","console","log","updatedNote","n","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","length","date","Date","toISOString","Math","random","returnedNote","concat","onChange","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"4KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QADR,QAEE,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAW,aAiBF,EAfA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa3B,EAVA,SAACC,GAEf,OADgBL,IAAMM,KAAKP,EAAUM,GACtBH,MAAK,SAAAK,GAAG,OAAIA,EAAIH,SAQjB,EALA,SAACI,EAAaC,GAE5B,OADgBT,IAAMU,IAAN,UAAaX,EAAb,YAAyBU,GAAOD,GACjCN,MAAK,SAAAK,GAAG,OAAIA,EAAIH,SCFjBO,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,qBAAKhB,UAAU,QAAf,SACGgB,KCUMC,EAjBA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GC6ESC,EAnFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAQAC,qBANmB,WACjBC,IAEG3B,MAAK,SAAA4B,GAAY,OAAIT,EAASS,QAGb,IAEtB,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAACxC,GAAD,OAA6B,IAAnBA,EAAKG,aA4ChC,OACE,gCACE,uCACA,cAAC,EAAD,CAAciB,QAASc,IACvB,8BACE,yBAAQ5B,QAAS,kBAAM2B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAACzC,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBArC/B,SAACgB,GAC1B,IAAMjB,EAAO4B,EAAMc,MAAK,SAAA1C,GAAI,OAAIA,EAAKiB,KAAOA,KACtCD,EAAW,2BAAOhB,GAAP,IAAaG,WAAYH,EAAKG,YAE/CwC,QAAQC,IAAI,mBAAoB5B,GAEhCqB,EACUrB,EAAaC,GACpBP,MAAK,SAAAmC,GACJhB,EAASD,EAAMa,KAAI,SAAAK,GAAC,OAAIA,EAAE7B,KAAOA,EAAK4B,EAAcC,SAErDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJnC,EAAKK,QADD,sCAGf4C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAM,GAAC,OAAIA,EAAE7B,KAAOA,SAmBsBiC,CAAmBlD,EAAKiB,MAArEjB,EAAKiB,SAGpB,uBAAMkC,SAxDM,SAACC,GACfA,EAAMC,iBACN,IAAMxC,EAAa,CACjBI,GAAIW,EAAM0B,OAAS,EACnBjD,QAASyB,EACTyB,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAE7BtB,EACUxB,GACPH,MAAK,SAAAkD,GACJ/B,EAASD,EAAMiC,OAAOD,IACtB7B,EAAW,QA4Cb,UACE,uBAAO+B,SAnBY,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOC,QAkBeA,MAAOlC,IAC1C,wBAAQmC,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MChFNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12a84c3f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} &nbsp;\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from \"axios\";\n\nconst BASE_URL = '/api/notes'\n\nconst getAll = () => {\n\tconst request = axios.get(BASE_URL)\n\treturn request.then(response => response.data)\n  }\n\nconst create = (noteObject) => {\n\tconst request = axios.post(BASE_URL, noteObject)\n\treturn request.then(res => res.data)\n}\n\nconst update = (changedNote, id) => {\n\tconst request = axios.put(`${BASE_URL}/${id}` , changedNote)\n\treturn request.then(res => res.data)\n}\n\nexport default {getAll, create, update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from './components/notes'\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const fetchNotes = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes))\n  }\n\n  useEffect(fetchNotes, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\")\n      })\n    }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    console.log('changedNote :>> ', changedNote);\n\n    noteService\n      .update(changedNote, id)\n      .then(updatedNote => {\n        setNotes(notes.map(n => n.id === id ? updatedNote : n))\n      })\n      .catch(err => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? \"Important\" : \"All\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input onChange={handleNoteChange} value={newNote}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}